// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ekklesia;

namespace ekklesia.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20200212202720_MemberOccasion")]
    partial class MemberOccasion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ekklesia.Models.EventModel.Occasion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int>("EventType");

                    b.HasKey("Id");

                    b.ToTable("Occasions");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Occasion");
                });

            modelBuilder.Entity("ekklesia.Models.EventModel.OccasionMember", b =>
                {
                    b.Property<int>("MemberId");

                    b.Property<int>("OccasionId");

                    b.Property<int?>("ReunionId");

                    b.Property<int?>("SundaySchoolId");

                    b.HasKey("MemberId", "OccasionId");

                    b.HasIndex("OccasionId");

                    b.HasIndex("ReunionId");

                    b.HasIndex("SundaySchoolId");

                    b.ToTable("OccasionMember");
                });

            modelBuilder.Entity("ekklesia.Models.MemberModel.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<string>("PhotoPath");

                    b.Property<int>("Position");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("ekklesia.Models.TransactionModel.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .IsRequired();

                    b.Property<DateTime>("Date");

                    b.Property<int>("Type");

                    b.Property<decimal>("Value");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("ekklesia.Models.EventModel.Cult", b =>
                {
                    b.HasBaseType("ekklesia.Models.EventModel.Occasion");

                    b.Property<string>("MainVerse")
                        .IsRequired();

                    b.Property<int>("NumberOfPeople");

                    b.ToTable("Cults");

                    b.HasDiscriminator().HasValue("Cult");
                });

            modelBuilder.Entity("ekklesia.Models.EventModel.Reunion", b =>
                {
                    b.HasBaseType("ekklesia.Models.EventModel.Occasion");

                    b.Property<DateTime>("EndTime");

                    b.Property<int>("SpeakerId");

                    b.Property<string>("Topic")
                        .IsRequired();

                    b.Property<int>("Type");

                    b.HasIndex("SpeakerId");

                    b.ToTable("Reunions");

                    b.HasDiscriminator().HasValue("Reunion");
                });

            modelBuilder.Entity("ekklesia.Models.EventModel.SundaySchool", b =>
                {
                    b.HasBaseType("ekklesia.Models.EventModel.Occasion");

                    b.Property<int>("NumberOfBibles");

                    b.Property<int>("TeacherId");

                    b.Property<string>("Theme")
                        .IsRequired();

                    b.Property<string>("Verse")
                        .IsRequired();

                    b.HasIndex("TeacherId");

                    b.ToTable("SundaySchools");

                    b.HasDiscriminator().HasValue("SundaySchool");
                });

            modelBuilder.Entity("ekklesia.Models.EventModel.OccasionMember", b =>
                {
                    b.HasOne("ekklesia.Models.MemberModel.Member", "Member")
                        .WithMany("Meetings")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ekklesia.Models.EventModel.Occasion", "Occasion")
                        .WithMany()
                        .HasForeignKey("OccasionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ekklesia.Models.EventModel.Reunion")
                        .WithMany("PresentMembers")
                        .HasForeignKey("ReunionId");

                    b.HasOne("ekklesia.Models.EventModel.SundaySchool")
                        .WithMany("Members")
                        .HasForeignKey("SundaySchoolId");
                });

            modelBuilder.Entity("ekklesia.Models.EventModel.Reunion", b =>
                {
                    b.HasOne("ekklesia.Models.MemberModel.Member", "Speaker")
                        .WithMany()
                        .HasForeignKey("SpeakerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ekklesia.Models.EventModel.SundaySchool", b =>
                {
                    b.HasOne("ekklesia.Models.MemberModel.Member", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
